import{Ea as D,Fa as b,La as A,O as h,Oa as M,P as f,R as v,T as _,U as u,Y as C,Z as p,a as m,b as y,d as T,e as a,fb as w,hb as F,la as V,nb as E,ob as j,pb as I,r as l}from"./chunk-ICH5CO4W.js";var G={"[class.ng-untouched]":"isUntouched","[class.ng-touched]":"isTouched","[class.ng-pristine]":"isPristine","[class.ng-dirty]":"isDirty","[class.ng-valid]":"isValid","[class.ng-invalid]":"isInvalid","[class.ng-pending]":"isPending"},_e=y(m({},G),{"[class.ng-submitted]":"isSubmitted"});var B=new v("CallSetDisabledState",{providedIn:"root",factory:()=>N}),N="always";var U=(()=>{let t=class t{};t.\u0275fac=function(i){return new(i||t)},t.\u0275mod=p({type:t}),t.\u0275inj=f({});let n=t;return n})();var O=(()=>{let t=class t{static withConfig(e){return{ngModule:t,providers:[{provide:B,useValue:e.callSetDisabledState??N}]}}};t.\u0275fac=function(i){return new(i||t)},t.\u0275mod=p({type:t}),t.\u0275inj=f({imports:[U]});let n=t;return n})();var g=T(j());var x=(()=>{let t=class t{constructor(e){this.platformId=e,this.storage=null,this.storage=w(this.platformId)?localStorage:null}getItem(e){return this.storage?.getItem(e)??null}setItem(e,i){this.storage?.setItem(e,i)}};t.\u0275fac=function(i){return new(i||t)(_(V))},t.\u0275prov=h({token:t,factory:t.\u0275fac,providedIn:"root"});let n=t;return n})();var P="token";function c(){return`salt=${new Date().getTime()}`}var ke=(()=>{let t=class t{constructor(){this.httpClient=u(F),this.notification=u(I),this.localStorage=u(x),this.owner="parafia-zolkiewka",this.repo="parafia-zolkiewka.github.io",this.branch="master",this.apiKey="",this.date="",this.inputType="password"}ngOnInit(){this.apiKey=this.localStorage.getItem(P)||"",this.date=(0,g.default)().endOf("week").format("YYYY-MM-DD")}toggleInputType(){this.inputType==="password"?this.inputType="text":this.inputType="password"}saveTokenToStorage(e){this.localStorage.setItem(P,e)}onUpload(){return a(this,null,function*(){a(this,null,function*(){if(!this.apiKey)throw new Error('Nie wype\u0142niono pola "Token"');let e=(0,g.default)(this.date,"YYYY-MM-DD");if(!e.isValid()||e.format("YYYY-MM-DD")!==this.date)throw new Error("Brak lub nieprawid\u0142owy format daty");if(!this.announcementsFile&&!this.intentionsFile)throw new Error("Nie wybrano z\u0307adnego pliku");this.announcementsFile&&(yield this.fetchAndUpdateFile(this.announcementsFile,"ogloszenia").then(()=>{this.notification.addNotification({type:"success",message:"Og\u0142oszenia zosta\u0142y zaktualizowane"})}).catch(i=>{console.error(i),this.notification.addNotification({type:"error",message:"B\u0142a\u0328d podczas aktualizacji pliku og\u0142osze\u0144"})})),this.intentionsFile&&(yield this.fetchAndUpdateFile(this.intentionsFile,"intencje").then(()=>{this.notification.addNotification({type:"success",message:"Intencje zosta\u0142y zaktualizowane"})}).catch(i=>{console.error(i),this.notification.addNotification({type:"error",message:"B\u0142a\u0328d podczas aktualizacji pliku intencji"})})),yield this.onReloadContent()}).catch(e=>{console.error(e),this.notification.addNotification({type:"error",message:e.message})})})}fetchAndUpdateFile(e,i){return a(this,null,function*(){let s=this.apiKey,r=this.date,o=`src/assets/${i}/${r}.html`;try{let d=yield l(this.httpClient.get(`https://api.github.com/repos/${this.owner}/${this.repo}/contents/${o}?ref=${this.branch}&${c()}`,{headers:{Authorization:`Bearer ${s}`}}));console.log("Updating existing file"),yield this.updateFile(e,i,r,o,s,d.sha)}catch{console.log("Creating a new file"),yield this.updateFile(e,i,r,o,s,null)}})}base64(e){return a(this,null,function*(){return new Promise((i,s)=>{let r=new FileReader;if(!e)return s();r.readAsDataURL(e),r.onloadend=()=>{let o=r.result;i(o.split(",")[1])}})})}updateFile(e,i,s,r,o,d){return a(this,null,function*(){this.saveTokenToStorage(o);let k=yield l(this.httpClient.put(`https://api.github.com/repos/${this.owner}/${this.repo}/contents/${r}?${c()}`,{message:`upload file ${i}/${s}.html [skip ci]`,content:yield this.base64(e),branch:this.branch,sha:d},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${o}`}}));console.log("success",k)})}onReloadContent(){return a(this,null,function*(){a(this,null,function*(){if(!this.apiKey)throw new Error('Nie wype\u0142niono pola "Token"');let e="date.txt",i=this.apiKey,s=new Date().toISOString();try{let r=yield l(this.httpClient.get(`https://api.github.com/repos/${this.owner}/${this.repo}/contents/${e}?ref=${this.branch}&${c()}`,{headers:{Authorization:`Bearer ${i}`}}));console.log("Updating existing file"),yield this.reloadContent(e,s,r.sha,i)}catch{console.log("Creating a new file"),yield this.reloadContent(e,s,null,i)}}).then(()=>{this.notification.addNotification({type:"success",message:"Zlecono automatyczn\u0105 aktualizacj\u0119 strony"})}).catch(e=>{this.notification.addNotification({type:"error",message:e.message})})})}reloadContent(e,i,s,r){return a(this,null,function*(){this.saveTokenToStorage(r);let o=yield l(this.httpClient.put(`https://api.github.com/repos/${this.owner}/${this.repo}/contents/${e}?${c()}`,{message:`Reload content ${i}`,content:yield this.base64(new File([i],"date.txt")),branch:this.branch,sha:s},{headers:{"Content-Type":"application/json",Authorization:`Bearer ${r}`}}));console.log("Content reload triggered successfully",o)})}onAnnouncementsFileChange(e){this.announcementsFile=e.target.files?.[0]}onIntentionsFileChange(e){this.intentionsFile=e.target.files?.[0]}};t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=C({type:t,selectors:[["app-admin-panel"]],standalone:!0,features:[M],decls:2,vars:0,template:function(i,s){i&1&&(D(0,"p"),A(1,"Admin panel"),b())},dependencies:[O,E],styles:["input[_ngcontent-%COMP%]{width:100%;border-width:1px;--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity));padding:.5rem}button[_ngcontent-%COMP%]{border-width:1px;--tw-border-opacity: 1;border-color:rgb(209 213 219 / var(--tw-border-opacity));--tw-bg-opacity: 1;background-color:rgb(59 130 246 / var(--tw-bg-opacity));padding:.5rem;--tw-text-opacity: 1;color:rgb(255 255 255 / var(--tw-text-opacity))}"]});let n=t;return n})();export{ke as AdminPanelComponent};
